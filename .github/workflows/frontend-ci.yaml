name: frontend-ci

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths:
      - "frontend/**"
  pull_request:
    branches:
      - "main"
    paths:
      - "backend/**"

env:
  IMAGE_NAME: "bureaublad-frontend"
  NEXT_PUBLIC_BACKEND_BASE_URL: /api

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: "frontend/.nvmrc"

      - name: Install dependencies
        run: |
          cd frontend/
          npm ci

      - name: Run prettier format
        run: |
          cd frontend/
          npm run format:check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: "frontend/.nvmrc"
      - name: Install dependencies
        run: |
          cd frontend/
          npm ci
      - name: Run eslint
        run: |
          cd frontend/
          npm run lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: "frontend/.nvmrc"
      - name: Install dependencies
        run: |
          cd frontend/
          npm ci
      - name: Run typecheck
        run: |
          cd frontend/
          npm run typecheck

  build:
    needs: [format, lint, typecheck]
    name: Push Docker image to github registries
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v5

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/minbzk/${{ env.IMAGE_NAME }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@v6
        with:
          context: frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            NEXT_PUBLIC_BACKEND_BASE_URL=${{env.NEXT_PUBLIC_BACKEND_BASE_URL}}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ghcr.io/minbzk/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
