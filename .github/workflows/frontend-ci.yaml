name: frontend-ci

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths:
      - "frontend/**"

env:
  IMAGE_NAME: "bureaublad-frontend"
  URL: "https://bureaublad.apps.digilab.network"
  NEXT_PUBLIC_KEYCLOAK_URL: "http://localhost:8080"
  NEXT_PUBLIC_KEYCLOAK_REALM: mijnbureau
  NEXT_PUBLIC_KEYCLOAK_CLIENT: bureaublad
  NEXT_PUBLIC_BACKEND_BASE_URL: http://localhost:8000'

jobs:
  build:
    name: Push Docker image to github registries
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v5

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/minbzk/${{ env.IMAGE_NAME }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@v6
        with:
          context: frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            NEXT_PUBLIC_KEYCLOAK_URL=${{env.NEXT_PUBLIC_KEYCLOAK_URL}}
            NEXT_PUBLIC_KEYCLOAK_REALM=${{env.NEXT_PUBLIC_KEYCLOAK_REALM}}
            NEXT_PUBLIC_KEYCLOAK_CLIENT=${{env.NEXT_PUBLIC_KEYCLOAK_CLIENT}}
            NEXT_PUBLIC_BACKEND_BASE_URL=${{env.NEXT_PUBLIC_BACKEND_BASE_URL}}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ghcr.io/minbzk/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
