# ============================================================================
# Bureaublad Backend Configuration
# ============================================================================
# Copy this file to .env and configure with your actual values
# Generate SECRET_KEY with: python -c "import secrets; print(secrets.token_urlsafe(32))"
#
# NOTE: ALL services are optional! Only configure what you need.
# In dev mode, warnings will show which services are not configured.

# ----------------------------------------------------------------------------
# Core Settings (REQUIRED)
# ----------------------------------------------------------------------------
# Secret key for signing JWT tokens - MUST be set and kept secure
# Generate a new key for each environment
SECRET_KEY=your-secret-key-here-min-32-chars

# Environment: "dev" or "prod"
# In dev mode, warnings are shown for missing optional integrations
ENVIRONMENT=dev

# Enable debug mode (set to false in production)
DEBUG=true

# Session cookie max age in seconds
# Should be >= refresh token lifetime from your OIDC provider
# Default: 7200 (2 hours)
# SESSION_MAX_AGE=7200

# Logging configuration
# LOGGING_LEVEL sets the minimum log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# Default: INFO
# For development: DEBUG
# For production: INFO or WARNING
# LOGGING_LEVEL=INFO
#
# Note: Logs are written to both stdout and bureaublad-backend.log file
# In containerized environments (Docker/Kubernetes), consider logging to stdout only
# by mounting a custom logging config that removes the file handler

# ----------------------------------------------------------------------------
# OpenID Connect Authentication (OPTIONAL)
# ----------------------------------------------------------------------------
# Configure all OIDC settings to enable authentication
OIDC_CLIENT_ID=bureaublad
OIDC_CLIENT_SECRET=bureaublad01zjZKXPgK0An4RpsF78ycJy
OIDC_AUTHORIZATION_ENDPOINT=http://keycloak.localhost/realms/mijnbureau/protocol/openid-connect/auth
OIDC_LOGOUT_ENDPOINT=http://keycloak.localhost/realms/mijnbureau/protocol/openid-connect/logout
OIDC_POST_LOGOUT_REDIRECT_URI=http://bureaublad.localhost
OIDC_TOKEN_ENDPOINT=http://keycloak:8080/realms/mijnbureau/protocol/openid-connect/token
OIDC_REVOCATION_ENDPOINT=http://keycloak.localhost/realms/mijnbureau/protocol/openid-connect/revoke
OIDC_JWKS_ENDPOINT=http://keycloak:8080/realms/mijnbureau/protocol/openid-connect/certs
OIDC_ISSUER=http://keycloak.localhost/realms/mijnbureau
OIDC_AUDIENCE=bureaublad
OIDC_USERNAME_CLAIM=preferred_username
# OIDC_SCOPES=openid,email,profile
OIDC_SIGNATURE_ALGORITM=RS256

# ----------------------------------------------------------------------------
# La Suite Services (ALL OPTIONAL)
# ----------------------------------------------------------------------------
# Files/NextCloud service
OCS_URL=http://mockserver_nextcloud:1080
# OCS_AUDIENCE: str = "nextcloud"

# Documents service
DOCS_URL=http://mockserver_docs:1080
# DOCS_AUDIENCE: str = "docs"

# Calendar service
CALENDAR_URL=http://mockserver_caldav:1080
# CALENDAR_AUDIENCE: str = "openxchange"

# Task management service
TASK_URL=http://mockserver_caldav:1080
# TASK_AUDIENCE: str = "openxchange"

# Drive service
DRIVE_URL=http://mockserver_drive:1080
# DRIVE_AUDIENCE: str = "drive"

# Meet/Video conferencing service
MEET_URL=http://mockserver_meet:1080
# MEET_AUDIENCE: str = "meet"

GRIST_URL=http://mockserver_grist:1080
# GRIST_AUDIENCE=grist

CONVERSATION_URL=http://mockserver_conversation:1080
# CONVERSATION_AUDIENCE=conversation


# ----------------------------------------------------------------------------
# AI Integration (OPTIONAL)
# ----------------------------------------------------------------------------
# Set AI_API_KEY to enable AI features (OpenAI-compatible API)
AI_API_KEY=sk-your-api-key-here
AI_BASE_URL=http://mockserver_ai:1080
AI_MODEL=gpt-4o

# ----------------------------------------------------------------------------
# Theme Configuration (OPTIONAL)
# ----------------------------------------------------------------------------
# URL to custom theme CSS file
# THEME_CSS_URL=https://example.com/custom-theme.css

# ----------------------------------------------------------------------------
# Sidebar Links Configuration (OPTIONAL)
# ----------------------------------------------------------------------------
# Configure sidebar links as JSON array
# Example:
SIDEBAR_LINKS_JSON='[{"icon":"rvo-icon-home","url":"http://bureablad.local","title":"Home"}]'

# ----------------------------------------------------------------------------
# CORS Configuration (OPTIONAL)
# ----------------------------------------------------------------------------
# Configure CORS allowed origins. URLs are validated at startup.
# Default: [] (no origins allowed)
#
# Examples:
# CORS_ALLOW_ORIGINS=*  # Allow all origins (development only!)
# CORS_ALLOW_ORIGINS=http://localhost:3000,http://localhost:5173
# CORS_ALLOW_ORIGINS=https://app.example.com,https://admin.example.com
#
# Note: URLs are validated - typos will be caught at startup
# Trailing slashes are automatically normalized
#
CORS_ALLOW_ORIGINS=http://bureaublad.localhost
# CORS_ALLOW_CREDENTIALS=false
# CORS_ALLOW_METHODS and CORS_ALLOW_HEADERS require JSON array format:
# CORS_ALLOW_METHODS='["GET","POST","PUT","DELETE"]'
# CORS_ALLOW_HEADERS='["*"]'

# ----------------------------------------------------------------------------
# Trusted Hosts Configuration (OPTIONAL)
# ----------------------------------------------------------------------------
# Configure allowed Host header values to prevent HTTP Host Header attacks.
# Default: ["*"] (all hosts allowed)
# Format: JSON array
#
# For local development:
TRUSTED_HOSTS='["localhost","127.0.0.1","bureaublad.localhost"]'
