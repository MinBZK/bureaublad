services:
  traefik:
    image: traefik:v3.5.3
    command:
      - "--api.dashboard=false"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=proxy"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.asdefault=true"
      - "--global.checknewversion=false"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy
    restart: unless-stopped
    depends_on:
      - frontend

  frontend:
    image: ghcr.io/minbzk/bureaublad-frontend:dev
    build:
      context: frontend
      dockerfile: Dockerfile
      target: prod
      args:
        NEXT_PUBLIC_BACKEND_BASE_URL: /api
    restart: unless-stopped
    # volumes:
    #   - ./frontend/src:/app/src/
    depends_on:
      - backend
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`bureaublad.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.priority=5"

  backend:
    image: ghcr.io/minbzk/bureaublad-api:dev
    build:
      context: backend
      dockerfile: Dockerfile
    command: ["--host", "0.0.0.0", "app.main:app", "--port", "8000", "--reload"]
    restart: unless-stopped
    env_file:
      - backend/.env
    volumes:
      - ./backend/app:/app/app/
    depends_on:
      - keycloak
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`bureaublad.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.priority=10"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  keycloak:
    image: quay.io/keycloak/keycloak:26.4.0
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_DB_URL: jdbc:postgresql://postgres:5432/postgres
      KC_HOSTNAME: http://keycloak.localhost
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
    restart: unless-stopped
    command: start-dev --import-realm
    volumes:
      - ./keycloak/import:/opt/keycloak/data/import
    depends_on:
      - postgres
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.localhost`)"
      - "traefik.http.routers.keycloak.entrypoints=web"

  postgres:
    image: postgres:17.6
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "admin"]
      interval: 10s
      timeout: 2s
      retries: 3
    networks:
      - proxy
  mockserver_docs:
    image: mockserver/mockserver:5.15.0
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/docs.json
      MOCKSERVER_LOG_LEVEL: OFF
    volumes:
      - ./mocks/docs.json:/config/docs.json:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mockserver_docs.rule=Host(`docs.localhost`)"
      - "traefik.http.routers.mockserver_docs.entrypoints=web"

  mockserver_drive:
    image: mockserver/mockserver:5.15.0
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/drive.json
      MOCKSERVER_LOG_LEVEL: OFF
    volumes:
      - ./mocks/drive.json:/config/drive.json:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mockserver_drive.rule=Host(`drive.localhost`)"
      - "traefik.http.routers.mockserver_drive.entrypoints=web"

  mockserver_grist:
    image: mockserver/mockserver:5.15.0
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/grist.json
      MOCKSERVER_LOG_LEVEL: OFF
    volumes:
      - ./mocks/grist.json:/config/grist.json:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mockserver_grist.rule=Host(`grist.localhost`)"
      - "traefik.http.routers.mockserver_grist.entrypoints=web"

  mockserver_meet:
    image: mockserver/mockserver:5.15.0
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/meet.json
      MOCKSERVER_LOG_LEVEL: OFF
    volumes:
      - ./mocks/meet.json:/config/meet.json:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mockserver_meet.rule=Host(`meet.localhost`)"
      - "traefik.http.routers.mockserver_meet.entrypoints=web"

  mockserver_nextcloud:
    image: mockserver/mockserver:5.15.0
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/nextcloud.json
      MOCKSERVER_LOG_LEVEL: OFF
    volumes:
      - ./mocks/nextcloud.json:/config/nextcloud.json:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mockserver_nextcloud.rule=Host(`nextcloud.localhost`)"
      - "traefik.http.routers.mockserver_nextcloud.entrypoints=web"

  mockserver_ai:
    image: mockserver/mockserver:5.15.0
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/ai.json
      MOCKSERVER_LOG_LEVEL: OFF
    volumes:
      - ./mocks/ai.json:/config/ai.json:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mockserver_ai.rule=Host(`ai.localhost`)"
      - "traefik.http.routers.mockserver_ai.entrypoints=web"

  mockserver_conversation:
    image: mockserver/mockserver:5.15.0
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/conversations.json
      MOCKSERVER_LOG_LEVEL: OFF
    volumes:
      - ./mocks/conversations.json:/config/conversations.json:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mockserver_conversation.rule=Host(`conversations.localhost`)"
      - "traefik.http.routers.mockserver_conversation.entrypoints=web"

volumes:
  postgres:

networks:
  proxy:
    driver: bridge
